// @generated by protoc-gen-es v1.10.0
// @generated from file ticketquerier/v1/service.proto (package ticketquerier.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message ticketquerier.v1.Ticket
 */
export declare class Ticket extends Message<Ticket> {
  /**
   * @generated from field: string ticket_id = 1;
   */
  ticketId: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 3;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string created_by = 4;
   */
  createdBy: string;

  /**
   * @generated from field: string title = 5;
   */
  title: string;

  /**
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * @generated from field: google.protobuf.Timestamp deadline = 7;
   */
  deadline?: Timestamp;

  constructor(data?: PartialMessage<Ticket>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ticketquerier.v1.Ticket";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Ticket;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Ticket;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Ticket;

  static equals(a: Ticket | PlainMessage<Ticket> | undefined, b: Ticket | PlainMessage<Ticket> | undefined): boolean;
}

/**
 * @generated from message ticketquerier.v1.QueryTicketsRequest
 */
export declare class QueryTicketsRequest extends Message<QueryTicketsRequest> {
  /**
   * @generated from field: string requested_by = 1;
   */
  requestedBy: string;

  constructor(data?: PartialMessage<QueryTicketsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ticketquerier.v1.QueryTicketsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTicketsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTicketsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTicketsRequest;

  static equals(a: QueryTicketsRequest | PlainMessage<QueryTicketsRequest> | undefined, b: QueryTicketsRequest | PlainMessage<QueryTicketsRequest> | undefined): boolean;
}

/**
 * @generated from message ticketquerier.v1.QueryTicketsResponse
 */
export declare class QueryTicketsResponse extends Message<QueryTicketsResponse> {
  /**
   * @generated from field: repeated ticketquerier.v1.Ticket tickets = 1;
   */
  tickets: Ticket[];

  constructor(data?: PartialMessage<QueryTicketsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ticketquerier.v1.QueryTicketsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTicketsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTicketsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTicketsResponse;

  static equals(a: QueryTicketsResponse | PlainMessage<QueryTicketsResponse> | undefined, b: QueryTicketsResponse | PlainMessage<QueryTicketsResponse> | undefined): boolean;
}

/**
 * @generated from message ticketquerier.v1.GetTicketByIdRequest
 */
export declare class GetTicketByIdRequest extends Message<GetTicketByIdRequest> {
  /**
   * @generated from field: string ticket_id = 1;
   */
  ticketId: string;

  constructor(data?: PartialMessage<GetTicketByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ticketquerier.v1.GetTicketByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTicketByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTicketByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTicketByIdRequest;

  static equals(a: GetTicketByIdRequest | PlainMessage<GetTicketByIdRequest> | undefined, b: GetTicketByIdRequest | PlainMessage<GetTicketByIdRequest> | undefined): boolean;
}

/**
 * @generated from message ticketquerier.v1.GetTicketByIdResponse
 */
export declare class GetTicketByIdResponse extends Message<GetTicketByIdResponse> {
  /**
   * @generated from field: ticketquerier.v1.Ticket ticket = 1;
   */
  ticket?: Ticket;

  constructor(data?: PartialMessage<GetTicketByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ticketquerier.v1.GetTicketByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTicketByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTicketByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTicketByIdResponse;

  static equals(a: GetTicketByIdResponse | PlainMessage<GetTicketByIdResponse> | undefined, b: GetTicketByIdResponse | PlainMessage<GetTicketByIdResponse> | undefined): boolean;
}

